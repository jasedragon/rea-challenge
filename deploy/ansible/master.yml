# We use "hosts: all" as terraform passes ansible a list of exactly one host
- hosts: all
  become: true  # super user required for most tasks
  vars:
    appname: 'sinatra'


####################### BEGIN BUILD ##############

  tasks:
    - name: Ensure timezone is set to Australia/Melbourne
      timezone:
        name: Australia/Melbourne

    ################## Packages #################
    - name: Ensure all packages are updated to latest version
      environment: 
        DEBIAN_FRONTEND: 'noninteractive'
      apt:
        update_cache: yes
        cache_valid_time: 3600
        upgrade: dist
      register: apt_upgrades

    - name: Ensure dependencies are installed
      environment: 
        DEBIAN_FRONTEND: 'noninteractive'
      apt:
        install_recommends: no
        name: "{{ packages }}"
      vars:
        packages:
        - apt-transport-https
        - fail2ban
        - nginx
        - ruby2.7
        - ruby-bundler
        

    ###### Workaround systemd/nginx race condition
    - name: Ensure nginx service override dir exists 
      file: 
        path: /etc/systemd/system/nginx.service.d/ 
        state: directory
        mode: '0755'

    ## introduces a 0.1 second pause on (re)start
    - name: Copy nginx-service-override.conf
      copy:
        src: files/nginx-service-override.conf
        dest: /etc/systemd/system/nginx.service.d/override.conf
        mode: '0644'


     ######### Run Sinatra app as non-admin user ###### 
    - name: Create Sinatra User
      user:
        name: sinatra
        state: present
        shell: /bin/bash
        uid: 1001
        groups: staff
        append: yes

    ############ Deploy Sinatra Application ######
    - name: Copy App directory to homedir
      copy:
        src: ../../app
        dest: /home/sinatra/
        mode: 0440
        owner: 'sinatra'
        group: 'sinatra'

    - name: Install app bundle
      shell: cd /home/sinatra/app && bundle install
      become_user: ubuntu    # has sudo for gem install
      args:
        creates: /var/lib/gems/2.7.0/gems/sinatra-*

    ### This will be replaced by systemd/puma
    - name: Launch Sinatra app
      shell: cd /home/sinatra/app && bundle exec rackup &
      become_user: sinatra
      # args:
      #   creates: /var/lib/gems/2.7.0/gems/sinatra-2.1.0

#################### Puma systemd scripts #######################################
    - name: Create puma socket directory
      file: 
        path: /var/www/sockets/ 
        group: staff 
        state: directory
        mode: 0775

    - name: Copy puma init script
      copy:
        src: files/systemd-puma
        dest: /etc/systemd/system/puma_sinatra.service

    - name: Enable service puma_sinatra
      service:
        name: puma_sinatra
        enabled: yes


    #### determine if we should reboot - trigger on ANY upgrade ####
    - debug:
        msg: "Upgraded Packages: {{ apt_upgrades.stdout }}"  



    # ############# Reboot ##########
    # - name: Reboot to apply any system/security updates
    #   reboot:
    #     reboot_timeout: 60
